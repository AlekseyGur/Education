# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

numbers = [123, 'text', [], (), False]
print([type(el) for el in numbers])


# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно использовать функцию input().

numbers = input('Введите числа через пробел = ').split()
for i, val in enumerate(numbers):
    if not i % 2: # каждый нечётный
      if i < len(numbers) - 1: # у последнего него нет i+1 элемента
         numbers[i], numbers[i+1] = numbers[i+1], numbers[i]
print(numbers)


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и dict.

month_num = int(input('Введите номер месяца от 1 до 12 = '))

if month_num in [12, 1, 2]:
    print('зима')
elif month_num in [3, 4, 5]:
    print('весна')
elif month_num in [6, 7, 8]:
    print('лето')
else:
    print('осень')


months = {'зима': [12, 1, 2], 'весна': [3, 4, 5], 'лето': [6, 7, 8], 'осень': [9, 10, 11]}
print([month_name for month_name in months if month_num in months[month_name]][0])


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.

w = input('Введите слова через пробел = ').split()
for i in range(len(w)):
    print(str(i+1) + ' ' + w[i][:10])


# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

num = int(input('Введите число = '))
my_list = [7, 5, 3, 3, 2]
my_list.append(num)
my_list.sort(reverse=True)
print(my_list)


#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.

#Пример готовой структуры:

#[
   #(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
   #(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
   #(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]
#Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название. Тогда значение — список значений-характеристик, например, список названий товаров.

#Пример:

#{
   #“название”: [“компьютер”, “принтер”, “сканер”],
   #“цена”: [20000, 6000, 2000],
   #“количество”: [5, 2, 7],
   #“ед”: [“шт.”]
#}

all_list = [
   (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
   (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}),
   (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
] 

res = {}
for item in all_list:
    for prop, val in item[1].items():
       res.setdefault(prop, [])
       res[prop].append(val)
    
print(res)
