# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def dev(a: int, b: int):
    print('Нельзя делить на ноль') if b == 0 else print(a / b)

a = int(input('Введите первое число = '))
b = int(input('Введите второе число = '))
dev(a, b)


# 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.

def info(name: str, surname: str, year: int, city: str, email: str, phone: str):
    print(f'Имя: {name}, фамилия: {surname}, год: {year}, город: {city}, почта: {email}, телефон: {phone}')

info(name = '123', surname = '123', year = '123', city = '123', email = '123', phone = '123')


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def my_func(a: int, b: int, c: int) -> int:
    return sum(sorted([*(a, b, c)])[-2:]) # делаем уникальными (кортеж), сортируем, берём два последних, суммируем

print(my_func(3, 4, 1))


# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень. Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x: int, y: int) -> int:
    return x ** y

def my_func(x: int, y: int) -> int:
    result = 1
    for _ in range(y):
        result *= x
    return result

print(my_func(2, 10))


# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def str_sum(sum, str):
    for i in str.split():
        if i.isnumeric():
            sum += int(i)
        else:
            return sum, True
    return sum, False

sum = 0
while True:
    str = input('Введите числа через пробел = ')
    sum, force_break = str_sum(sum, str)
    print(f'Сумма = {sum}')
    if force_break: break


# 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def int_func(str):
    return str.title()


# 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().

str = 'lorem ipsum dolor sit amet'
print(*[int_func(w) for w in str.split()])
