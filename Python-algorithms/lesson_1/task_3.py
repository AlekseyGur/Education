# 3. Написать программу, которая генерирует в указанных пользователем границах:
# a. случайное целое число,
# b. случайное вещественное число,
# c. случайный символ.
# Для каждого из трех случаев пользователь задает свои границы диапазона. Например, если надо получить случайный символ от 'a' до 'f', то вводятся эти символы. Программа должна вывести на экран любой символ алфавита от 'a' до 'f' включительно.
#
# Попытайтесь решить задания без использования циклов и собственных функций (они будут рассматриваться на уроке 2), а также без массивов (они будут рассматриваться на уроке 3).
#
# Для простоты понимания зарезервированные слова forи while считаются циклом, def - функцией, любые квадратные скобки [ и ] - массивами. Их наличие в коде расценивается как неверное решение.
#
# Договариваемся об идеальном пользователе, который вводит только верные данные, которые требует программа. Проверка ввода не обязательна. Уделите это время в первую очередь построению графического алгоритма, а затем написанию кода по этому алгоритму. Не наоборот.

from random import randint, uniform

a_min = int(input('a_min = '))
a_max = int(input('a_max = '))

b_min = float(input('b_min = '))
b_max = float(input('b_max = '))

c_min = input('c_min = ')
c_max = input('c_max = ')

# a. случайное целое число,
print(randint(a_min, a_max))

# b. случайное вещественное число,
print(uniform(b_min, b_max))

# c. случайный символ.
ltrs = 'abcdefghijklmnopqrstuvwxyz'
idx_c_min = ltrs.find(c_min)
idx_c_max = ltrs.find(c_max)
print(ltrs[randint(idx_c_min, idx_c_max)])
